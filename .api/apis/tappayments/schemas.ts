const CreateACharge = {"body":{"type":"object","required":["amount","currency","customer","source","redirect"],"properties":{"amount":{"type":"number","description":"The amount to be collected by this payment, in ISO standard decimal places. A positive decimal representing how much to charge in the currency unit (e.g: 100 to charge $100 and 100.5 to charge $100.50). The minimum amount is $0.100 for any charge currency.","default":1,"format":"float","minimum":-3.402823669209385e+38,"maximum":3.402823669209385e+38},"currency":{"type":"string","description":"Three-letter ISO currency code, in uppercase. Must be a supported currency.","default":"KWD"},"customer_initiated":{"type":"boolean","description":"This parameter determines whether the charge was initiated by customer or not","default":true},"threeDSecure":{"type":"boolean","description":"The 3D Secure request status for a particular charge. Values can be either ``true`` or ``false``.","default":true},"save_card":{"type":"boolean","description":"Payer can save credit cards for future purpose but a customer phone number is required to save the card. Values can be either be True or False. In order to use this feature, save card feature needs to be activated on the Merchant Account.","default":false},"payment_agreement":{"type":"object","description":"Serves as a unique identifier for referencing and managing the payment agreement","properties":{"id":{"type":"string","description":"Serves as a unique identifier for referencing and managing the payment agreement."},"contract":{"type":"object","description":"Represents the unique identifier for the associated contract, helping in identification and referencing.","properties":{"id":{"type":"string","description":"Uniquely identifies the agreement between the merchant and the customer, using an invoice ID, subscription ID, card ID, or order ID."}}}}},"description":{"type":"string","description":"An arbitrary string which you can attach to a ``Charge`` request with more details, if needed.","default":"Test Description"},"order":{"type":"object","description":"The object represents a specific order information such as order ID of the related transaction.","properties":{"id":{"type":"string","description":"The ID of the Order"}}},"metadata":{"type":"object","description":"The set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.","properties":{"udf1":{"type":"string","description":"Merchant can define new parameters (key/value pairs) within this metadata object.","default":"Metadata 1"}}},"receipt":{"type":"object","description":"Note: this feature is no longer supported","properties":{"email":{"type":"boolean","description":"Set it as ``true` if this charge’s receipt needs to be sent to the customer's email address.","default":false},"sms":{"type":"boolean","description":"Set it as ``true` if this charge’s receipt needs to be sent to the customer's phone number.","default":false}}},"reference":{"type":"object","description":"The reference numbers related to the charge.","properties":{"transaction":{"type":"string","description":"The transaction reference number provided by the Merchant.","default":"txn_01"},"order":{"type":"string","description":"The order reference number provided by the Merchant.","default":"ord_01"},"idempotent":{"type":"string","description":"The idempotent string to restrict duplicate payments. If the same idempotent string is passed, a new charge will not be initiated, whereas the response of the first charge will be returned."}}},"customer":{"type":"object","description":"The details about the customer who will be performing the transaction.","required":["first_name","email"],"properties":{"first_name":{"type":"string","description":"The First Name of the Customer.","default":"test"},"middle_name":{"type":"string","description":"The Middle Name of the Customer.","default":"test"},"last_name":{"type":"string","description":"The Last Name of the Customer.","default":"test"},"email":{"type":"string","description":"The Email ID of the Customer.","default":"test@test.com"},"phone":{"type":"object","description":"The Phone Number of the Customer.","properties":{"country_code":{"type":"integer","description":"The Country Code of the Phone Number. Do not add +.","default":965,"format":"int32","minimum":-2147483648,"maximum":2147483647},"number":{"type":"integer","description":"The Number without Country Code.","default":51234567,"format":"int32","minimum":-2147483648,"maximum":2147483647}}},"id":{"type":"string","description":"The ID of an existing Customer that will be charged in this request. If ID is passed, no need to pass the other parameters of this object."}}},"merchant":{"type":"object","description":"The ID of the Merchant Account. Available on the Tap Dashboard (goSell > API Credentials > Merchant ID)","properties":{"id":{"type":"string","description":"The ID of the Merchant Account to which the funds need to be routed.","default":"1234"}}},"source":{"type":"object","description":"The details about the payment method at the time of the transaction. Possible values: for local payment methods, use the respective source_id. Example:  For KNET, use ``src_kw.knet``; for capturing a token, use the ``token_id``; to authorize an existing authorized transaction use the ``authorize_id``; to display all payment methods in a Tap hosted page, use ``src_all``; to display only the card payment methods in a Tap hosted page, use ``src_card``; for capturing from saved card for customer, create a token by using [Create a Token API](https://developers.tap.company/reference/create-a-token-from-saved-card) (make sure to pass ``customer_id`` in the customer object); . Refer to Payment Methods guide for more information.","properties":{"id":{"type":"string","default":"src_all"}}},"post":{"type":"object","description":"The Webhook URL. After payment is completed, Tap will POST the response payload as a raw data to this URL.","properties":{"url":{"type":"string","default":"http://your_website.com/post_url","examples":["https://1f3b186efe31e8696c144578816c5443.m.pipedream.net/"]}}},"redirect":{"type":"object","description":"After payment is completed, payer will be redirected to this URL (KNET, mada and 3D secure charge requests requires Redirect URL)","properties":{"url":{"type":"string","default":"http://your_website.com/redirect_url","examples":["https://1f3b186efe31e8696c144578816c5443.m.pipedream.net/"]}}},"payment_provider":{"type":"object","description":"Information about the payment provider associated with this charge","properties":{"technology":{"type":"object","description":"Information about the payment provider technology associated with this charge","properties":{"id":{"type":"string","description":"The technology ID provided by Tap"}}}}},"platform":{"type":"object","description":"The Platform parameter identifies the platform under which the merchant is operating, linking the transaction to the appropriate platform.","properties":{"id":{"type":"string","description":"The Platform ID parameter identifies the platform under which the merchant is operating, linking the transaction to the appropriate platform."}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"response":{"200":{"oneOf":[{"type":"object","properties":{"id":{"type":"string","examples":["chg_TS012520220955Rr950709475"]},"object":{"type":"string","examples":["charge"]},"live_mode":{"type":"boolean","default":true,"examples":[false]},"api_version":{"type":"string","examples":["V2"]},"method":{"type":"string","examples":["CREATE"]},"status":{"type":"string","examples":["INITIATED"]},"amount":{"type":"integer","default":0,"examples":[1]},"currency":{"type":"string","examples":["KWD"]},"threeDSecure":{"type":"boolean","default":true,"examples":[true]},"card_threeDSecure":{"type":"boolean","default":true,"examples":[false]},"save_card":{"type":"boolean","default":true,"examples":[false]},"merchant_id":{"type":"string","examples":[""]},"product":{"type":"string","examples":["GOSELL"]},"description":{"type":"string","examples":["Test Description"]},"metadata":{"type":"object","properties":{"udf1":{"type":"string","examples":["Metadata 1"]}}},"transaction":{"type":"object","properties":{"timezone":{"type":"string","examples":["UTC+03:00"]},"created":{"type":"string","examples":["1662544525491"]},"url":{"type":"string","examples":["https://checkout.payments.tap.company?mode=page&token=6318405da53ea40ebd4da0c0"]},"expiry":{"type":"object","properties":{"period":{"type":"integer","default":0,"examples":[30]},"type":{"type":"string","examples":["MINUTE"]}}},"asynchronous":{"type":"boolean","default":true,"examples":[false]},"amount":{"type":"integer","default":0,"examples":[1]},"currency":{"type":"string","examples":["KWD"]}}},"reference":{"type":"object","properties":{"transaction":{"type":"string","examples":["txn_01"]},"order":{"type":"string","examples":["ord_01"]}}},"response":{"type":"object","properties":{"code":{"type":"string","examples":["100"]},"message":{"type":"string","examples":["Initiated"]}}},"receipt":{"type":"object","properties":{"email":{"type":"boolean","default":true,"examples":[true]},"sms":{"type":"boolean","default":true,"examples":[true]}}},"customer":{"type":"object","properties":{"first_name":{"type":"string","examples":["test"]},"last_name":{"type":"string","examples":["test"]},"email":{"type":"string","examples":["test@test.com"]},"phone":{"type":"object","properties":{"country_code":{"type":"string","examples":["965"]},"number":{"type":"string","examples":["51234567"]}}}}},"merchant":{"type":"object","properties":{"id":{"type":"string","examples":["599424"]}}},"source":{"type":"object","properties":{"object":{"type":"string","examples":["source"]},"id":{"type":"string","examples":["src_all"]}}},"redirect":{"type":"object","properties":{"status":{"type":"string","examples":["PENDING"]},"url":{"type":"string","examples":["http://your_website.com/redirect_url"]}}},"post":{"type":"object","properties":{"status":{"type":"string","examples":["PENDING"]},"url":{"type":"string","examples":["http://your_website.com/post_url"]}}},"activities":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","examples":["activity_TS062620220955Nk440709312"]},"object":{"type":"string","examples":["activity"]},"created":{"type":"integer","default":0,"examples":[1662544525491]},"status":{"type":"string","examples":["INITIATED"]},"currency":{"type":"string","examples":["KWD"]},"amount":{"type":"integer","default":0,"examples":[1]},"remarks":{"type":"string","examples":["charge - created"]}}}},"auto_reversed":{"type":"boolean","default":true,"examples":[false]}}},{"title":"charge response with payment agreement","type":"object","properties":{"id":{"type":"string","examples":["chg_TS02A2720230055g4JO1406864"]},"object":{"type":"string","examples":["charge"]},"live_mode":{"type":"boolean","default":true,"examples":[false]},"customer_initiated":{"type":"boolean","default":true,"examples":[true]},"api_version":{"type":"string","examples":["V2"]},"method":{"type":"string","examples":["GET"]},"status":{"type":"string","examples":["CAPTURED"]},"amount":{"type":"integer","default":0,"examples":[1]},"currency":{"type":"string","examples":["KWD"]},"threeDSecure":{"type":"boolean","default":true,"examples":[true]},"card_threeDSecure":{"type":"boolean","default":true,"examples":[false]},"save_card":{"type":"boolean","default":true,"examples":[false]},"merchant_id":{"type":"string","examples":[""]},"product":{"type":"string","examples":["GOSELL"]},"description":{"type":"string","examples":["Test Description"]},"metadata":{"type":"object","properties":{"udf1":{"type":"string","examples":["Metadata 1"]}}},"transaction":{"type":"object","properties":{"authorization_id":{"type":"string","examples":["100204"]},"timezone":{"type":"string","examples":["UTC+03:00"]},"created":{"type":"string","examples":["1686704127943"]},"expiry":{"type":"object","properties":{"period":{"type":"integer","default":0,"examples":[30]},"type":{"type":"string","examples":["MINUTE"]}}},"asynchronous":{"type":"boolean","default":true,"examples":[false]},"amount":{"type":"integer","default":0,"examples":[1]},"currency":{"type":"string","examples":["KWD"]}}},"reference":{"type":"object","properties":{"track":{"type":"string","examples":["tck_TS02A2920230055e5R41406896"]},"payment":{"type":"string","examples":["2914230055068969225"]},"gateway":{"type":"string","examples":["123456789012345"]},"acquirer":{"type":"string","examples":["316421100204"]},"transaction":{"type":"string","examples":["txn_01"]},"order":{"type":"string","examples":["ord_01"]}}},"response":{"type":"object","properties":{"code":{"type":"string","examples":["000"]},"message":{"type":"string","examples":["Captured"]}}},"security":{"type":"object","properties":{"threeDSecure":{"type":"object","properties":{"id":{"type":"string","examples":["3ds_TS07A2720230055l5Q21406943"]},"status":{"type":"string","examples":["Y"]}}}}},"acquirer":{"type":"object","properties":{"response":{"type":"object","properties":{"code":{"type":"string","examples":["00"]},"message":{"type":"string","examples":["Approved"]}}}}},"gateway":{"type":"object","properties":{"response":{"type":"object","properties":{"code":{"type":"string","examples":["0"]},"message":{"type":"string","examples":["Transaction Approved"]}}}}},"card":{"type":"object","properties":{"object":{"type":"string","examples":["card"]},"first_six":{"type":"string","examples":["424242"]},"scheme":{"type":"string","examples":["VISA"]},"brand":{"type":"string","examples":["VISA"]},"last_four":{"type":"string","examples":["4242"]}}},"receipt":{"type":"object","properties":{"id":{"type":"string","examples":["203014230055062725"]},"email":{"type":"boolean","default":true,"examples":[true]},"sms":{"type":"boolean","default":true,"examples":[true]}}},"customer":{"type":"object","properties":{"id":{"type":"string","examples":["cus_TS01A4620230032p4KP1406279"]},"first_name":{"type":"string","examples":["test"]},"middle_name":{"type":"string","examples":["test"]},"last_name":{"type":"string","examples":["test"]},"email":{"type":"string","examples":["test@test.com"]},"phone":{"type":"object","properties":{"country_code":{"type":"string","examples":["965"]},"number":{"type":"string","examples":["51234567"]}}}}},"merchant":{"type":"object","properties":{"country":{"type":"string","examples":["KW"]},"currency":{"type":"string","examples":["KWD"]},"id":{"type":"string","examples":["599424"]}}},"source":{"type":"object","properties":{"object":{"type":"string","examples":["token"]},"type":{"type":"string","examples":["CARD_NOT_PRESENT"]},"payment_type":{"type":"string","examples":["CREDIT"]},"payment_method":{"type":"string","examples":["VISA"]},"channel":{"type":"string","examples":["INTERNET"]},"id":{"type":"string","examples":["tok_2uKe58232153ZmxV138r5c637"]}}},"redirect":{"type":"object","properties":{"status":{"type":"string","examples":["SUCCESS"]},"url":{"type":"string","examples":["http://your_website.com/redirect_url"]}}},"post":{"type":"object","properties":{"status":{"type":"string","examples":["ERROR"]},"url":{"type":"string","examples":["http://your_website.com/post_url"]}}},"activities":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","examples":["activity_TS07A3020230055j5O91406255"]},"object":{"type":"string","examples":["activity"]},"created":{"type":"integer","default":0,"examples":[1686704127943]},"status":{"type":"string","examples":["INITIATED"]},"currency":{"type":"string","examples":["KWD"]},"amount":{"type":"integer","default":0,"examples":[1]},"remarks":{"type":"string","examples":["charge - created"]}}}},"auto_reversed":{"type":"boolean","default":true,"examples":[false]},"payment_agreement":{"type":"object","properties":{"id":{"type":"string","examples":["payment_agreement_TS07A4620230032t4K21406294"]},"total_payments_count":{"type":"integer","default":0,"examples":[1]},"contract":{"type":"object","properties":{"id":{"type":"string","examples":["card_YOh6102321312TNL13qE5C584"]},"type":{"type":"string","examples":["UNSCHEDULED"]}}},"variable_amount":{"type":"object","properties":{"id":{"type":"string","examples":["variable_amount_TS07A4620230032Ra9k1406294"]}}}}}}}],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","properties":{"errors":{"type":"array","items":{"type":"object","properties":{"code":{"type":"string","examples":["1125"]},"description":{"type":"string","examples":["We were unable to process your payment. Please verify your payment method or card details and try again."]}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const DownloadCharges = {"body":{"type":"object","properties":{"period":{"type":"object","description":"Retrieve charges for a selected period","properties":{"date":{"type":"object","description":"From and to date range (charge created date), Measured in Unix epoch time (milliseconds).","properties":{"from":{"type":"string","description":"From date (charge created date), Measured in Unix Epoch Timestamp (milliseconds).","default":"1662190768000"},"to":{"type":"string","description":"To date (charge created date), Measured in Unix Epoch Timestamp (milliseconds).","default":"1662536368000"}}},"type":{"type":"string","description":"This parameter defines the different transaction states or statuses that can be queried or filtered within the system. The following are the accepted values and their corresponding meanings:  CHARGE: When this value is used, the API will retrieve all charges that have been initiated or requested by the user.  POST: Selecting this value will fetch charges that have been successfully posted or processed to the Settlement system for further processing.  SETTLED: This value will retrieve matured transactions, where the transaction amount has been settled and credited to the Tap wallet.  PAID_OUT: When using this value, the API will return charges that have been successfully paid out to the respective bank or financial institution.  By specifying one of these accepted values as a parameter, the API can be used to fetch specific sets of transactions based on their current state or status in the system.","default":"1"}}},"merchants":{"type":"array","description":"List of merchant IDs for which the charges are being queried","default":["599242"],"items":{"type":"string"}},"payouts":{"type":"object","description":"Retrieve charges based on payouts","properties":{"payout_id":{"type":"array","description":"Array of payouts (you can specify the list of Payouts ID's to retrieve).","items":{"type":"string"}},"payout_reference":{"type":"array","description":"Array of payouts references(you can specify the list of Payouts references's to retrieve).","items":{"type":"string"}}}},"status":{"type":"string","description":"Retrieve the selected list of charges info by charge status. Values can be: INITIATED, IN_PROGRESS, ABANDONED, CANCELLED, FAILED, DECLINED, RESTRICTED, CAPTURED, VOID, TIMEDOUT or UNKNOWN"},"sources":{"type":"array","description":"Array of sources (you can specify the list of Source ID's to retrieve).","items":{"type":"string"}},"payment_methods":{"type":"array","description":"Array of payment methods (you can specify the list of payment method Source ID's to retrieve).","items":{"type":"string"}},"customers":{"type":"array","description":"Array of customers (you can specify the list of Customer ID's to retrieve).","items":{"type":"string"}},"charges":{"type":"array","description":"Array of charges (you can specify the list of Source ID's to retrieve).","items":{"type":"string"}},"starting_after":{"type":"string","description":"A cursor for use in pagination. The starting_after parameter takes a charge ID that determines your position in the list. For example, if your list request returns 50 charges that end with cus_foo, you can use starting_after=cus_foo in your next call to retrieve the next page of the list."},"charge_created":{"type":"string","description":"Created date (charge created date), Measured in Unix Epoch Timestamp (milliseconds)."},"mobile":{"type":"string","description":"Filter the results based on customer mobile number"},"email":{"type":"string","description":"filter the results based on customer email"},"limit":{"type":"string","description":"The maximum number of charges to return in a single call. Default: 25; Maximum: 50."},"order":{"type":"string","description":"Sort the results Ascending or Descending by date"},"order_by":{"type":"string","description":"Defaults to date"},"metadata":{"type":"object","description":"Filter the results based on meta data values","properties":{"udf1":{"type":"string","description":"Merchant can define new parameters (key/value pairs) within this metadata object.","default":"Metadata 1"}}},"currency":{"type":"string","description":"Filter the charges based on charge currency"},"reference":{"type":"object","properties":{"transaction":{"type":"string","description":"The transaction reference number provided by the Merchant.","default":"txn_01"},"order":{"type":"string","description":"The order reference number provided by the Merchant.","default":"ord_01"},"idempotent":{"type":"string","description":"The idempotent string to restrict duplicate payments. If the same idempotent string is passed, a new charge will not be initiated, whereas the response of the first charge will be returned."}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"response":{"200":{"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","properties":{},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const ListAllCharges = {"body":{"type":"object","properties":{"period":{"type":"object","description":"Retrieve charges for a selected period","properties":{"date":{"type":"object","description":"From and to date range (charge created date), Measured in Unix epoch time (milliseconds).","properties":{"from":{"type":"string","description":"From date (charge created date), Measured in Unix Epoch Timestamp (milliseconds).","default":"1662190768000"},"to":{"type":"string","description":"To date (charge created date), Measured in Unix Epoch Timestamp (milliseconds).","default":"1662536368000"}}},"type":{"type":"string","description":"This parameter defines the different transaction states or statuses that can be queried or filtered within the system. The following are the accepted values and their corresponding meanings:  CHARGE: When this value is used, the API will retrieve all charges that have been initiated or requested by the user.  POST: Selecting this value will fetch charges that have been successfully posted or processed to the Settlement system for further processing.  SETTLED: This value will retrieve matured transactions, where the transaction amount has been settled and credited to the Tap wallet.  PAID_OUT: When using this value, the API will return charges that have been successfully paid out to the respective bank or financial institution.  By specifying one of these accepted values as a parameter, the API can be used to fetch specific sets of transactions based on their current state or status in the system.","default":"1"}}},"status":{"type":"string","description":"Retrieve the selected list of charges info by charge status. Values can be: INITIATED, IN_PROGRESS, ABANDONED, CANCELLED, FAILED, DECLINED, RESTRICTED, CAPTURED, VOID, TIMEDOUT or UNKNOWN"},"sources":{"type":"array","description":"Array of sources (you can specify the list of Source ID's to retrieve).","items":{"type":"string"}},"payment_methods":{"type":"array","description":"Array of payment methods (you can specify the list of payment method Source ID's to retrieve).","items":{"type":"string"}},"customers":{"type":"array","description":"Array of customers (you can specify the list of Customer ID's to retrieve).","items":{"type":"string"}},"charges":{"type":"array","description":"Array of charges (you can specify the list of Source ID's to retrieve).","items":{"type":"string"}},"starting_after":{"type":"string","description":"A cursor for use in pagination. The starting_after parameter takes a charge ID that determines your position in the list. For example, if your list request returns 50 charges that end with cus_foo, you can use starting_after=cus_foo in your next call to retrieve the next page of the list."},"charge_created":{"type":"string","description":"Created date (charge created date), Measured in Unix Epoch Timestamp (milliseconds)."},"mobile":{"type":"string","description":"Filter the results based on customer mobile number"},"email":{"type":"string","description":"filter the results based on customer email"},"limit":{"type":"string","description":"The maximum number of charges to return in a single call. Default: 25; Maximum: 50.","default":"25"},"order":{"type":"string","description":"Sort the results Ascending or Descending by date","enum":["chronological","reverse_chronological"]},"order_by":{"type":"string","description":"Applying the sorting based on","default":"date"},"metadata":{"type":"string","description":"Filter the results based on meta data values"},"currency":{"type":"string","description":"Filter the charges based on charge currency"},"payouts":{"type":"object","description":"Retrieve charges based on payouts","properties":{"payout_id":{"type":"array","description":"Array of payouts (you can specify the list of Payouts ID's to retrieve).","items":{"type":"string"}},"payout_reference":{"type":"array","description":"Array of payouts references(you can specify the list of Payouts references's to retrieve).","items":{"type":"string"}}}},"reference":{"type":"object","properties":{"order":{"type":"array","description":"Array of orders references (you can specify the list of orders reference's to retrieve).","items":{"type":"string"}},"transaction":{"type":"array","description":"Array of transactions references (you can specify the list of transactions reference's to retrieve).","items":{"type":"string"}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"response":{"200":{"type":"object","properties":{"object_type":{"type":"string","examples":["list"]},"live_mode":{"type":"boolean","default":true,"examples":[false]},"count":{"type":"integer","default":0,"examples":[1]},"has_more":{"type":"boolean","default":true,"examples":[false]},"api_version":{"type":"string","examples":["V1.2"]},"charges":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","examples":["chg_Ri4520181519Pm4k1890208"]},"object":{"type":"string","examples":["charge"]},"live_mode":{"type":"boolean","default":true,"examples":[false]},"api_version":{"type":"string","examples":["V1.2"]},"status":{"type":"string","examples":["CAPTURED"]},"amount":{"type":"integer","default":0,"examples":[1]},"currency":{"type":"string","examples":["KWD"]},"threeDSecure":{"type":"boolean","default":true,"examples":[true]},"save_card":{"type":"boolean","default":true,"examples":[false]},"statement_descriptor":{"type":"string","examples":["Sample"]},"transaction":{"type":"object","properties":{"authorization_id":{"type":"string","examples":["238792"]},"timezone":{"type":"string","examples":["UTC+03:00"]},"created":{"type":"string","examples":["1534594768043"]}}},"reference":{"type":"object","properties":{"track":{"type":"string","examples":["tck_t4T420181519q9RX1827708"]},"payment":{"type":"string","examples":["pay_k4K220181519Ml921827708"]},"gateway":{"type":"string","examples":["123456789"]},"acquirer":{"type":"string","examples":["823012238792"]},"transaction":{"type":"string","examples":["txn_0001"]},"order":{"type":"string","examples":["ord_0001"]}}},"response":{"type":"object","properties":{"code":{"type":"string","examples":["000"]},"message":{"type":"string","examples":["Captured"]}}},"security":{"type":"object","properties":{"threeDSecure":{"type":"object","properties":{"id":{"type":"string","examples":["3ds_Ka4220181519Bi4r184308"]},"status":{"type":"string","examples":["Y"]}}}}},"acquirer":{"type":"object","properties":{"response":{"type":"object","properties":{"code":{"type":"string","examples":["00"]},"message":{"type":"string","examples":["Approved"]}}}}},"card":{"type":"object","properties":{"first_six":{"type":"string","examples":["512345"]},"last_four":{"type":"string","examples":["0008"]}}},"receipt":{"type":"object","properties":{"id":{"type":"string","examples":["20180818151931965"]},"email":{"type":"boolean","default":true,"examples":[false]},"sms":{"type":"boolean","default":true,"examples":[false]}}},"customer":{"type":"object","properties":{"id":{"type":"string","examples":["cus_y4P520181519Be9i1821508"]},"first_name":{"type":"string","examples":["test"]},"middle_name":{"type":"string","examples":["test"]},"last_name":{"type":"string","examples":["test"]},"email":{"type":"string","examples":["test@test.com"]},"phone":{"type":"object","properties":{"country_code":{"type":"string","examples":["965"]},"number":{"type":"string","examples":["50000000"]}}}}},"source":{"type":"object","properties":{"object":{"type":"string","examples":["TOKEN"]},"payment_method":{"type":"string","examples":["MASTERCARD"]},"id":{"type":"string","examples":["tok_2zPT5SAHOR6nEG3c0xJvdUCk"]}}},"redirect":{"type":"object","properties":{"url":{"type":"string","examples":["http://your_website.com/redirect_url"]}}},"post":{"type":"object","properties":{"url":{"type":"string","examples":["http://your_website.com/redirect_url"]}}},"description":{"type":"string","examples":["Test Description"]},"metadata":{"type":"object","properties":{"udf1":{"type":"string","examples":["test 1"]},"udf2":{"type":"string","examples":["test 2"]}}},"payout":{"type":"object","properties":{"amount":{"type":"number","default":0,"examples":[9.75]},"currency":{"type":"string","examples":["KWD"]},"count":{"type":"integer","default":0,"examples":[1]}}}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","properties":{},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const RetrieveACharges = {"metadata":{"allOf":[{"type":"object","properties":{"charge_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The unique ``charge.id`` that was returned from your previous charge request."}},"required":["charge_id"]}]},"response":{"200":{"type":"object","properties":{"id":{"type":"string","examples":["chg_TS050120220958Bk240709704"]},"object":{"type":"string","examples":["charge"]},"live_mode":{"type":"boolean","default":true,"examples":[false]},"api_version":{"type":"string","examples":["V2"]},"method":{"type":"string","examples":["GET"]},"status":{"type":"string","examples":["CAPTURED"]},"amount":{"type":"integer","default":0,"examples":[1]},"currency":{"type":"string","examples":["KWD"]},"threeDSecure":{"type":"boolean","default":true,"examples":[false]},"card_threeDSecure":{"type":"boolean","default":true,"examples":[false]},"save_card":{"type":"boolean","default":true,"examples":[false]},"merchant_id":{"type":"string","examples":[""]},"product":{"type":"string","examples":["GOSELL"]},"description":{"type":"string","examples":["Test Description"]},"metadata":{"type":"object","properties":{"udf1":{"type":"string","examples":["Metadata 1"]}}},"transaction":{"type":"object","properties":{"authorization_id":{"type":"string","examples":["321387"]},"timezone":{"type":"string","examples":["UTC+03:00"]},"created":{"type":"string","examples":["1662544753039"]},"expiry":{"type":"object","properties":{"period":{"type":"integer","default":0,"examples":[30]},"type":{"type":"string","examples":["MINUTE"]}}},"asynchronous":{"type":"boolean","default":true,"examples":[false]},"amount":{"type":"number","default":0,"examples":[1.03]},"currency":{"type":"string","examples":["KWD"]}}},"reference":{"type":"object","properties":{"track":{"type":"string","examples":["tck_TS050120220958Xx440709704"]},"payment":{"type":"string","examples":["1707220958097045920"]},"gateway":{"type":"string","examples":["123456789"]},"acquirer":{"type":"string","examples":["225006321387"]},"transaction":{"type":"string","examples":["txn_01"]},"order":{"type":"string","examples":["ord_01"]}}},"response":{"type":"object","properties":{"code":{"type":"string","examples":["000"]},"message":{"type":"string","examples":["Captured"]}}},"acquirer":{"type":"object","properties":{"response":{"type":"object","properties":{"code":{"type":"string","examples":["00"]},"message":{"type":"string","examples":["Approved"]}}}}},"gateway":{"type":"object","properties":{"response":{"type":"object","properties":{"code":{"type":"string","examples":["0"]},"message":{"type":"string","examples":["Transaction Approved"]}}}}},"card":{"type":"object","properties":{"object":{"type":"string","examples":["card"]},"first_six":{"type":"string","examples":["511111"]},"scheme":{"type":"string","examples":["MASTERCARD"]},"brand":{"type":"string","examples":["MASTERCARD"]},"type":{"type":"string","examples":["DEBIT"]},"category":{"type":"string","examples":["STANDARD"]},"last_four":{"type":"string","examples":["1118"]}}},"receipt":{"type":"object","properties":{"id":{"type":"string","examples":["202007220958092921"]},"email":{"type":"boolean","default":true,"examples":[true]},"sms":{"type":"boolean","default":true,"examples":[true]}}},"customer":{"type":"object","properties":{"id":{"type":"string","examples":["cus_TS051320220959Di9e0709722"]},"first_name":{"type":"string","examples":["test"]},"last_name":{"type":"string","examples":["test"]},"email":{"type":"string","examples":["test@test.com"]},"phone":{"type":"object","properties":{"country_code":{"type":"string","examples":["965"]},"number":{"type":"string","examples":["51234567"]}}}}},"merchant":{"type":"object","properties":{"country":{"type":"string","examples":["KW"]},"currency":{"type":"string","examples":["KWD"]},"id":{"type":"string","examples":["599424"]}}},"source":{"type":"object","properties":{"object":{"type":"string","examples":["token"]},"type":{"type":"string","examples":["CARD_NOT_PRESENT"]},"payment_type":{"type":"string","examples":["DEBIT"]},"payment_method":{"type":"string","examples":["MASTERCARD"]},"channel":{"type":"string","examples":["INTERNET"]},"id":{"type":"string","examples":["tok_Xx1e922659l00Z7gI8b577"]}}},"redirect":{"type":"object","properties":{"status":{"type":"string","examples":["SUCCESS"]},"url":{"type":"string","examples":["http://your_website.com/redirect_url"]}}},"post":{"type":"object","properties":{"status":{"type":"string","examples":["SUCCESS"]},"url":{"type":"string","examples":["http://your_website.com/post_url"]}}},"issuer":{"type":"object","properties":{"id":{"type":"string","examples":["bnk_TS052820221011q2O50709262"]},"name":{"type":"string","examples":["U.S. BANK, N.A."]},"country":{"type":"string","examples":["US"]},"region":{"type":"string","examples":["global"]}}},"activities":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","examples":["activity_TS061320220959h2J50709738"]},"object":{"type":"string","examples":["activity"]},"created":{"type":"integer","default":0,"examples":[1662544753039]},"status":{"type":"string","examples":["INITIATED"]},"currency":{"type":"string","examples":["KWD"]},"amount":{"type":"integer","default":0,"examples":[1]},"remarks":{"type":"string","examples":["charge - created"]}}}},"auto_reversed":{"type":"boolean","default":true,"examples":[false]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const UpdateACharge = {"body":{"type":"object","properties":{"description":{"type":"string","description":"An arbitrary string which you can attach to a charge object. It is displayed in the web interface alongside the charge.","default":"Test Description"},"metadata":{"type":"object","description":"Any additional information that the merchant wants to attach to the charge object.","properties":{"udf1":{"type":"string","description":"Merchant can define new parameters (key/value pairs) within this metadata object.","default":"Metadata 1"}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"charge_id":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The unique ``charge.id`` that was returned from your previous charge request."}},"required":["charge_id"]}]},"response":{"200":{"type":"object","properties":{"id":{"type":"string","examples":["chg_TS050120220958Bk240709704"]},"object":{"type":"string","examples":["charge"]},"live_mode":{"type":"boolean","default":true,"examples":[false]},"api_version":{"type":"string","examples":["V2"]},"method":{"type":"string","examples":["UPDATE"]},"status":{"type":"string","examples":["CAPTURED"]},"amount":{"type":"integer","default":0,"examples":[1]},"currency":{"type":"string","examples":["KWD"]},"threeDSecure":{"type":"boolean","default":true,"examples":[false]},"card_threeDSecure":{"type":"boolean","default":true,"examples":[false]},"save_card":{"type":"boolean","default":true,"examples":[false]},"merchant_id":{"type":"string","examples":[""]},"product":{"type":"string","examples":["GOSELL"]},"description":{"type":"string","examples":["Test Description"]},"metadata":{"type":"object","properties":{"udf1":{"type":"string","examples":["Metadata 1"]}}},"transaction":{"type":"object","properties":{"authorization_id":{"type":"string","examples":["321387"]},"timezone":{"type":"string","examples":["UTC+03:00"]},"created":{"type":"string","examples":["1662544753039"]},"expiry":{"type":"object","properties":{"period":{"type":"integer","default":0,"examples":[30]},"type":{"type":"string","examples":["MINUTE"]}}},"asynchronous":{"type":"boolean","default":true,"examples":[false]},"amount":{"type":"number","default":0,"examples":[1.03]},"currency":{"type":"string","examples":["KWD"]}}},"reference":{"type":"object","properties":{"track":{"type":"string","examples":["tck_TS050120220958Xx440709704"]},"payment":{"type":"string","examples":["1707220958097045920"]},"gateway":{"type":"string","examples":["123456789"]},"acquirer":{"type":"string","examples":["225006321387"]},"transaction":{"type":"string","examples":["txn_01"]},"order":{"type":"string","examples":["ord_01"]}}},"response":{"type":"object","properties":{"code":{"type":"string","examples":["000"]},"message":{"type":"string","examples":["Captured"]}}},"acquirer":{"type":"object","properties":{"response":{"type":"object","properties":{"code":{"type":"string","examples":["00"]},"message":{"type":"string","examples":["Approved"]}}}}},"gateway":{"type":"object","properties":{"response":{"type":"object","properties":{"code":{"type":"string","examples":["0"]},"message":{"type":"string","examples":["Transaction Approved"]}}}}},"card":{"type":"object","properties":{"object":{"type":"string","examples":["card"]},"first_six":{"type":"string","examples":["511111"]},"scheme":{"type":"string","examples":["MASTERCARD"]},"brand":{"type":"string","examples":["MASTERCARD"]},"last_four":{"type":"string","examples":["1118"]}}},"receipt":{"type":"object","properties":{"id":{"type":"string","examples":["202007220958092921"]},"email":{"type":"boolean","default":true,"examples":[true]},"sms":{"type":"boolean","default":true,"examples":[true]}}},"customer":{"type":"object","properties":{"id":{"type":"string","examples":["cus_TS051320220959Di9e0709722"]},"first_name":{"type":"string","examples":["test"]},"last_name":{"type":"string","examples":["test"]},"email":{"type":"string","examples":["test@test.com"]},"phone":{"type":"object","properties":{"country_code":{"type":"string","examples":["965"]},"number":{"type":"string","examples":["51234567"]}}}}},"merchant":{"type":"object","properties":{"country":{"type":"string","examples":["KW"]},"currency":{"type":"string","examples":["KWD"]},"id":{"type":"string","examples":["599424"]}}},"source":{"type":"object","properties":{"object":{"type":"string","examples":["token"]},"type":{"type":"string","examples":["CARD_NOT_PRESENT"]},"payment_type":{"type":"string","examples":["DEBIT"]},"payment_method":{"type":"string","examples":["MASTERCARD"]},"channel":{"type":"string","examples":["INTERNET"]},"id":{"type":"string","examples":["tok_Xx1e922659l00Z7gI8b577"]}}},"redirect":{"type":"object","properties":{"status":{"type":"string","examples":["SUCCESS"]},"url":{"type":"string","examples":["http://your_website.com/redirect_url"]}}},"post":{"type":"object","properties":{"status":{"type":"string","examples":["SUCCESS"]},"url":{"type":"string","examples":["https://eo9y4shdh3frsms.m.pipedream.net"]}}},"activities":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","examples":["activity_TS061320220959h2J50709738"]},"object":{"type":"string","examples":["activity"]},"created":{"type":"integer","default":0,"examples":[1662544753039]},"status":{"type":"string","examples":["INITIATED"]},"currency":{"type":"string","examples":["KWD"]},"amount":{"type":"integer","default":0,"examples":[1]},"remarks":{"type":"string","examples":["charge - created"]}}}},"auto_reversed":{"type":"boolean","default":true,"examples":[false]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"type":"object","properties":{"errors":{"type":"array","items":{"type":"object","properties":{"code":{"type":"string","examples":["1144"]},"description":{"type":"string","examples":["Charge not found"]}}}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
export { CreateACharge, DownloadCharges, ListAllCharges, RetrieveACharges, UpdateACharge }
